---
#
# var:cluster_admin_ip
# var:ontap_user
# var:lookup_password
# var:vol_name
# var:svm_name
# var:host_name
# var:mount_point
# var:unmount_volume
#
- hosts: "{{ host_name if host_name is defined else 'localhost' }}"
  gather_facts: no
  name: Unmount Volume
  vars:
    volume: "{{ vol_name if vol_name is defined else 'nfsvol' }}"
    mount: "{{ mount_point if mount_point is defined else '/' + volume }}"
    rununmount: "{{ unmount_volume if unmount_volume is defined else 'false'|bool }}"
  tasks:
    - include_tasks: unmount_nfs_tasks.yaml
      when: rununmount|bool == true
- hosts: localhost
  gather_facts: no
  name: Volume Delete
  vars:
    hostname: "{{ cluster_admin_ip }}"
    username: "{{ ontap_user if ontap_user is defined else 'admin' }}"
    password: "{{ ask_password if ask_password is defined else lookup('vars',lookup_password) if lookup_password is defined else ontap_password }}"
    volume: "{{ vol_name if vol_name is defined else 'nfsvol' }}"
    vserver: "{{ svm_name if svm_name is defined else 'svm0' }}"
  tasks:
    - name: Unmount Volume
      na_ontap_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        junction_path: ''
        name: "{{ volume }}" 
        vserver: "{{ vserver }}"
    - name: Offline Volume
      na_ontap_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        is_online: no
        name: "{{ volume }}" 
        vserver: "{{ vserver }}"
    - name: Delete Volume
      na_ontap_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        state: absent
        name: "{{ volume }}" 
        vserver: "{{ vserver }}"
