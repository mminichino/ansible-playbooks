---
#
# var:cluster_admin_ip
# var:db_host_name
# var:oracle_sid
# var:backup_cmd
# var:vol_name
# var:svm_name
# var:freeze_cmd
# var:thaw_cmd
# var:junction_path
# var:clone_name
#
- hosts: "{{ db_host_name }}"
  gather_facts: no
  serial: 1
  vars:
    runcmd: "{{ freeze_cmd if freeze_cmd is defined else '/home/oracle/oracle-scripts/db-hot-backup.sh -b -s ' + oracle_sid }}"
  tasks:
    - name: Put database in hot backup mode
      command: "{{ runcmd }}"
- name: Create Clone
  hosts: localhost
  vars:
    hostname: "{{ cluster_admin_ip }}"
    username: "{{ admin_user }}"
    password: "{{ admin_password }}"
    volume: "{{ vol_name if vol_name is defined else 'nfsvol' }}"
    vserver: "{{ svm_name if svm_name is defined else 'svm0' }}"
    snapshot: "{{ 'snapshot_clone_' + ansible_date_time.iso8601_basic_short }}"
    junction: "{{ junction_path if junction_path is defined else '/oradata' }}"
    clone: "{{ clone_name if clone_name is defined else volume + '_1' }}"
  tasks:
    - name: Unmount Clone
      na_ontap_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        junction_path: ''
        name: "{{ clone }}"
        vserver: "{{ vserver }}"
    - name: Offline Clone
      na_ontap_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        is_online: no
        name: "{{ clone }}"
        vserver: "{{ vserver }}"
    - name: Delete Clone
      na_ontap_volume:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        state: absent
        name: "{{ clone }}"
        vserver: "{{ vserver }}"
    - name: Snapshot Volume
      na_ontap_snapshot:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        state: present
        volume: "{{ volume }}" 
        vserver: "{{ vserver }}"
        snapshot: "{{ snapshot }}"
    - name: Clone Volume
      na_ontap_volume_clone:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        state: present
        parent_volume: "{{ volume }}" 
        vserver: "{{ vserver }}"
        parent_snapshot: "{{ snapshot }}"
        junction_path: "{{ junction }}"
        volume: "{{ clone }}"
        space_reserve: none
- hosts: "{{ db_host_name }}"
  gather_facts: no
  serial: 1
  vars:
    runcmd: "{{ thaw_cmd if thaw_cmd is defined else '/home/oracle/oracle-scripts/db-hot-backup.sh -e -s ' + oracle_sid }}"
  tasks:
    - name: Take database out of hot backup mode
      command: "{{ runcmd }}"
